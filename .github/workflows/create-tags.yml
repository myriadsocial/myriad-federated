name: Create Tags

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "TAGS"
        required: true
        type: string
      commit_sha:
        description: "COMMIT_SHA"
        required: false
        type: string

concurrency:
  group: create-tags

jobs:
  create-tags:
    runs-on: ubuntu-latest
    environment: mainnet
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: commit_sha check
        id: commit-sha
        shell: bash
        run: |
          COMMIT_SHA=${{ inputs.commit_sha }}
          INPUT_TAGS="${{ inputs.tags }}"
          RELEASE_TAGS=${INPUT_TAGS##* }
          PRE_RELEASE=true

          SHA_SHORT=$(git rev-parse --short HEAD)
          LATEST_TAG=latest

          if [[ $COMMIT_SHA != "" ]]
          then
            CUSTOME_COMMIT_SHA=${{ inputs.commit_sha }}
          else
            CUSTOME_COMMIT_SHA=${{ github.sha }}
          fi

          if [[ $RELEASE_TAGS =~ [0-9]+.[0-9]+.[0-9]+$ ]] ;
          then
            PRE_RELEASE=false
          fi

          echo $RELEASE_TAGS
          echo $PRE_RELEASE

          echo "::set-output name=commit_sha::$CUSTOME_COMMIT_SHA"
          echo "::set-output name=release_tags::$RELEASE_TAGS"
          echo "::set-output name=pre_release::$PRE_RELEASE"
          echo "::set-output name=sha_short::$SHA_SHORT"
          echo "::set-output name=latest_tag::$LATEST_TAG"
      - name: create and push tag
        shell: bash
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/git/refs \
            -d '{"ref":"refs/tags/${{ steps.commit-sha.outputs.release_tags }}","sha":"${{ steps.commit-sha.outputs.commit_sha }}"}'
      - name: create .env file
        shell: bash
        run: |
          tee -a .env.production <<EOF
          MYRIAD_WEBSITE_URL=${{ secrets.MYRIAD_WEBSITE_URL }}
          MYRIAD_RPC_URL=${{ secrets.MYRIAD_RPC_URL }}
          EOF
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-main
          restore-keys: |
            ${{ runner.os }}-buildx-
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0"
        with:
          token_format: "access_token"
          workload_identity_provider: ${{ secrets.GOOGLE_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
      - name: Login to GCR
        uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: .maintain/docker/Dockerfile
          tags: |
            gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ github.repository }}:${{ steps.commit-sha.outputs.release_tags }}
            gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ github.repository }}:${{ steps.commit-sha.outputs.latest_tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          toTag: ${{ steps.commit-sha.outputs.release_tags }}
          configuration: ".github/workflows/rcb_config.json"
      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.build_changelog.outputs.changelog }}
          draft: true
          prerelease: ${{ steps.commit-sha.outputs.pre_release }}
          name: ${{ steps.commit-sha.outputs.release_tags }}
          tag_name: ${{ steps.commit-sha.outputs.release_tags }}
